'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};exports.constants=constants;exports.loading=loading;exports.success=success;exports.error=error;exports.actions=actions;var _reduxActions=require('redux-actions');/* --------------------------example--------------------------------
export const TYPE = constants('module-name/namespace', [
	'~GET_NOTE', //it will create GET_NOTE, GET_NOTE_LOADING, ...
	'NORMAL_ACTION' //it will create only itself
])
------------------------------------------------------------------*/function constants(){var namespace=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var types=arguments[1];var _SUFFIXES=['LOADING','PENDING','SUCCESS','ERROR','FAILED','CANCELED'];if(arguments.length===1||Array.isArray(namespace)){types=namespace;namespace='';}if(!Array.isArray(types)){throw'types should be an array';}return types.reduce(function(obj,name){if(name.indexOf('~')===0){(function(){var type=name.slice(1);obj[type]=(namespace?namespace+'/':'')+(''+type);_SUFFIXES.forEach(function(suf){obj[type+'_'+suf]=(namespace?namespace+'/':'')+(type+'_'+suf);});})();}else{obj[name]=(namespace?namespace+'/':'')+(''+name);}return obj;},{});}//HELPERS
function loading(state,action){return _extends({},state,{error:null,loading:true});}function success(state,action){return _extends({},state,{payload:action.payload,error:null,loading:false});}function error(state,action){var error=action.payload&&action.payload;return _extends({},state,{error:error,loading:false});}function camelize(str){return str.toLowerCase().split('_').reduce(function(output,word){if(!output){output=word;}else{output+=word.charAt(0).toUpperCase()+word.slice(1);}return output;});}function isObject(obj){return Object.prototype.toString.call(obj).slice(8,-1).toLowerCase()==='object';}function actions(TYPES){if(!isObject(TYPES)){throw'TYPES should be an object';}return Object.keys(TYPES).reduce(function(actions,TYPE){actions[camelize(TYPE)]=(0,_reduxActions.createAction)(TYPES[TYPE]);return actions;},{});}